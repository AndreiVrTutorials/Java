/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.gf.almacen;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 *
 * @author laccasda
 */
public class Almacen extends javax.swing.JFrame {

    public static String bd = "almacen";
    public static String urlBD = "jdbc:mysql://localhost:3306/" + bd;
    public static String user = "root";
    public static String passwd = "";
    public static Connection conn;
    public DefaultComboBoxModel<TipoProductos> modeloCombo;
    public DefaultListModel<Productos> modeloLista;
    public static TipoProductos tipoprod;

    /**
     * Creates new form almacen
     */
    public Almacen() {
        initComponents();
        setFrame();
        llenarCombo();
    }

    private void setFrame() {
        this.modeloCombo = new DefaultComboBoxModel<>();
        this.jComboBox1.setModel(modeloCombo);
        this.modeloLista = new DefaultListModel<>();
        this.JListProductos.setModel(modeloLista);
        this.setTitle("Almacen");
        this.setLocationRelativeTo(null);
        JListProductos.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 1) {
                    Productos productoSeleccionado = (Productos) JListProductos.getSelectedValue();
                    mostrarInformacionProducto(productoSeleccionado);
                }
            }
        });
    }

    public Connection abrirConexion() {
        try {
            return DriverManager.getConnection(urlBD, user, passwd);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error al conectar con BD", "Conexion BD", JOptionPane.ERROR_MESSAGE);
            return null;
        }
    }

    public void llenarCombo() {
        Connection conn = null;
        try {
            //1.abrir conexion
            conn = abrirConexion();
            //2. ejecutar consulta: SELECT
            String sql = "select * from tiposproducto";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                //creo un objeto Productos con los datos de la fila
                int a1 = rs.getInt("idTipo");
                char a2 = rs.getString("tipo").charAt(0);

                TipoProductos objB = new TipoProductos(a1, a2);

                //almaceno el objA en el combo
                modeloCombo.addElement(objB);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error de BD",
                    "Conectar con BD", JOptionPane.ERROR_MESSAGE);
            System.out.println(ex.getMessage());
        } finally {
            //3. cerrar conexion
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Error al cerrar BD: " + ex.getMessage(), "Error BD", JOptionPane.ERROR_MESSAGE);
                }
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JListProductos = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tipo de producto: ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "(elige uno)", "A", "B", "C" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        jLabel2.setText("Listado de productos:");

        JListProductos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(JListProductos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)))
                        .addGap(0, 63, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        //
        TipoProductos objeto = (TipoProductos) this.jComboBox1.getSelectedItem();
        llenarLista(objeto.getIdTipo());

    }//GEN-LAST:event_jComboBox1ItemStateChanged

    public void llenarLista(int tipo) {
        Connection conn = null;
        try {
            modeloLista.clear();
            //1.abrir conexion
            conn = abrirConexion();
            //2. ejecutar consulta: SELECT
            String sql = "select * from productos";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                //creo un objeto Productos con los datos de la fila
                int a1 = rs.getInt("idProducto");
                String a2 = rs.getString("tipo");
                double a3 = rs.getDouble("precio");
                int a4 = rs.getInt("cantidad");
                int a5 = rs.getInt("tipo");

                Productos objA = new Productos(a1, a2, a3, a4, a5);

                //almaceno el objA en el combo
                if (rs.getInt("tipo") == tipo) {
                    modeloLista.addElement(objA);
                }
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error de BD",
                    "Conectar con BD", JOptionPane.ERROR_MESSAGE);
            System.out.println(ex.getMessage());
        } finally {
            //3. cerrar conexion
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Error al cerrar BD: " + ex.getMessage(), "Error BD", JOptionPane.ERROR_MESSAGE);
                }
            }
        }

    }

    private void mostrarInformacionProducto(Productos producto) {
        if (producto != null) {
            int cantidad = producto.getCantidad();
            String mensaje = "Unidades en stock: " + cantidad;

            if (cantidad < 10) {
                mensaje += "\n¡Atención! El producto está por debajo del stock de seguridad.";
            }

            // Mostrar el mensaje en un cuadro de diálogo
            JOptionPane.showMessageDialog(this, mensaje, "Información del producto", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Almacen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Almacen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList JListProductos;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
